// jshint esversion: 8
if (typeof require !== 'undefined') {
  UnitTestingApp = require('./UnitTestingApp.js');
}

// Function to test
function addTwoValues (a, b) {
  return a + b;
}

/*****************
 * TESTS 
 * Taking the sources files from: https://github.com/WildH0g/UnitTestingApp
 *****************/

/**
 * Runs the tests; insert online and offline tests where specified by comments
 * @returns {void}
 */
function runTests() {
  const test = new UnitTestingApp();
  test.enable();
  test.clearConsole();
  
  test.runInGas(false);
  test.printHeader('Testing addTwoValues online');
  

  /************************
   * Run Local Tests Here
  ************************/

  test.runInGas(true);
  test.printHeader('Testing addTwoValues local');
  // Testing new method: assertEquals, printSummary and printSubHeader using addTwoValue function with default levelInfo
  test.printSubHeader('Using default Level Info value (1)');
  test.assertEquals(() => addTwoValues(1,2),3);
  test.assertEquals(() => addTwoValues(1,2),4);
  test.assertEquals(() => addTwoValues(1,2),4, "message input argument specified");
  test.printSummary();

  // Testing the same tests just printing summary information
  test.printSubHeader('Testing the output setting levelInfo =0');
  test.setLevelInfo(0); // 0-Only summary result, 1-Detail results
  console.log('LevelInfo =' + test.getLevelInfo());
  test.assertEquals(() => addTwoValues(1,2),3);
  test.assertEquals(() => addTwoValues(1,2),4);
  test.assertEquals(() => addTwoValues(1,2),4, "test expected to fail");
  test.printSummary();
  console.log("Reset counters");
  test.resetTestCounters();
  test.printSummary();

  // Testing assert function work as expected
  test.printSubHeader('Testing with assert, with default level Info');
  test.setLevelInfo(1); 
  test.assert(() => addTwoValues(1,2) == 3, "Valid case");
  test.assert(() => addTwoValues(1,2) == 4, "Invalid case");
  test.printSummary();
  test.printSubHeader('Testing with assert, with printing just summary information only: one test passed, one failed');
  console.log("Reset counters");
  test.resetTestCounters();
  test.assert(() => addTwoValues(1,2) == 3, "Valid case");
  test.assert(() => addTwoValues(1,2) == 4, "Invalid case");
  test.printSummary();
  // Note under levelInfo = 0, only printSummary is able to print, all other print methods don't print information
  // therefore we use directly console.log
  console.log('Testing with assert, with printing just summary information only: one test passed');
  console.log("Reset counters");
  test.resetTestCounters();
  test.assert(() => addTwoValues(1,2) == 3, "Valid case");
  test.printSummary();

  
  /************************
 * Run Online Tests Here
 ************************/

}

/**
 * If we're running locally, execute the tests. In GAS environment, runTests() needs to be executed manually
 */
(function () {
  /**
 * @param {Boolean} - if true, were're in the GAS environment, otherwise we're running locally
 */
  const IS_GAS_ENV = typeof ScriptApp !== 'undefined';
  if (!IS_GAS_ENV) runTests();
})();
